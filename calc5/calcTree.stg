group calcTree;

calc(e) ::= <<
.class public calc5
.super java/lang/Object

; standard initializer (calls java.lang.Object's initializer)
;
.method public \<init\>()V
    aload_0
    invokenonvirtual java/lang/Object/\<init\>()V
    return
.end method

; main()
;
.method public static main([Ljava/lang/String;)V
.limit stack 50
.limit locals 50
; push System.out onto the stack
getstatic java/lang/System/out Ljava/io/PrintStream;

<e; separator="\n">

 ; done
    return
.end method

>>

create(v1,s1) ::= "<v1> = <s1>"

print(e) ::= <<
<e>
invokevirtual java/io/PrintStream/println(D)V
>>

expr(e) ::= "<e>"

add(e1,e2) ::= <<
<e1>
<e2>
dadd
>>
sub(e1,e2) ::= <<
<e1>
<e2>
dsub
>>


mul(e1,e2) ::= <<
<e1>
<e2>
dmul
>>

div(e1,e2) ::= <<
<e1>
<e2>
ddiv
>>

pow(e1,e2) ::= <<
<e1>
<e2>
invokestatic    java/lang/Math.pow(DD)D
>>

factor(f) ::= "<f>"

atom(a) ::= "<a>"

number(n) ::= "ldc2_w <n>"
inumber(n) ::= "ldc2_w <n>.0"

negat(f) ::= "<f>"

get(v) ::= "$<v>"


